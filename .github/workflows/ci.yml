name: CI

on:
  push:
    branches:
    - master
    - v*-branch
    tags:
    - v*
  pull_request:
    branches:
    - master
    - v*-branch

permissions:
  packages: write

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build (${{ matrix.variant.platform }})
    runs-on: ${{ matrix.variant.builder }}

    strategy:
      fail-fast: true
      matrix:
        variant:
        - platform: linux/amd64
          arch: amd64
          builder: zephyr-runner-linux-x64-xlarge
        - platform: linux/arm64
          arch: arm64
          builder: zephyr-runner-linux-arm64-xlarge

    services:
      registry:
        image: registry:2
        ports:
        - 5000:5000

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Generate local metadata for CI image
      id: meta_ci
      uses: docker/metadata-action@v3
      with:
        images: |
          localhost:5000/zephyrproject-rtos/ci

    - name: Generate local metadata for Developer image
      id: meta_developer
      uses: docker/metadata-action@v3
      with:
        images: |
          localhost:5000/zephyrproject-rtos/zephyr-build

    - name: Generate push metadata for CI image
      if: ${{ github.event_name != 'pull_request' }}
      id: meta_ci_push
      uses: docker/metadata-action@v3
      with:
        images: |
          docker.io/zephyrprojectrtos/ci
          ghcr.io/zephyrproject-rtos/ci
        flavor: |
          latest=false
          suffix=-${{ matrix.variant.arch }}
        tags: |
          type=ref,event=branch
          type=ref,event=tag
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Generate push metadata for Developer image
      if: ${{ github.event_name != 'pull_request' }}
      id: meta_developer_push
      uses: docker/metadata-action@v3
      with:
        images: |
          docker.io/zephyrprojectrtos/zephyr-build
          ghcr.io/zephyrproject-rtos/zephyr-build
        flavor: |
          latest=false
          suffix=-${{ matrix.variant.arch }}
        tags: |
          type=ref,event=branch
          type=ref,event=tag
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        driver-opts: network=host

    - name: Build CI docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: Dockerfile
        platforms: ${{ matrix.variant.platform }}
        push: true
        tags: ${{ steps.meta_ci.outputs.tags }}
        labels: ${{ steps.meta_ci.outputs.labels }}

    - name: Build Developer docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: Dockerfile.user
        platforms: ${{ matrix.variant.platform }}
        push: true
        tags: ${{ steps.meta_developer.outputs.tags }}
        labels: ${{ steps.meta_developer.outputs.labels }}
        build-args: |
          BASE_IMAGE=localhost:5000/zephyrproject-rtos/ci:${{ steps.meta_ci.outputs.version }}

    - name: Login to DockerHub
      if: ${{ github.event_name != 'pull_request' }}
      uses: docker/login-action@v1
      with:
        registry: docker.io
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Login to GitHub Container Registry
      if: ${{ github.event_name != 'pull_request' }}
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push CI docker image
      if: ${{ github.event_name != 'pull_request' }}
      uses: akhilerm/tag-push-action@v2.0.0
      with:
        src: localhost:5000/zephyrproject-rtos/ci:${{ steps.meta_ci.outputs.version }}
        dst: ${{ steps.meta_ci_push.outputs.tags }}

    - name: Push Developer docker image
      if: ${{ github.event_name != 'pull_request' }}
      uses: akhilerm/tag-push-action@v2.0.0
      with:
        src: localhost:5000/zephyrproject-rtos/zephyr-build:${{ steps.meta_developer.outputs.version }}
        dst: ${{ steps.meta_developer_push.outputs.tags }}
